先把程序窗口跑出来
这个的效果要比tk好太多了
先把窗口做出来
我用了其中一个窗口，总共有三个窗口类型

url:
https://blog.csdn.net/weixin_43431593/article/details/125577712
https://www.bilibili.com/read/cv21559381
标题栏应该怎么做：
  1. 就做一个叉号？
  2. 还是三个都做
  3. 肯定是要有标题的
  4. 还是说多做几个标题呢，不太清楚
然后bg图片怎么做，还是之前那个gif吗？还是一张静态图，还是云彩飘动的
去看看苹果的软件设计

设计：
  1.

任务：
  1. 实现一个大胆的想法，不要在一开始就加载好，等到点击按钮的时候再进行加载，还是一开始就加载好呢
  2. 我觉得还是需要就是在点击按钮再进行加载，因为用户可能只使用一个类别的任务，其他界面是不是就有点
     浪费性能资源了呢

感觉其实我的功能划分还是比较乱的，任务给出，然后就是做任务，做任务有两种方式，一个是
自己上传，一个是在我的编辑界面进入编辑，保存
我先不做编辑这个界面
我是一旦upload就成功，还是说多加一个按钮，来进行判别
一旦按完成按钮，就会出现一个动画和界面说我们已完成，就不能再回到任务界面了
我还不太想做完成界面的，直接就到开始界面怎么样，就是说比如我完成了一个任务，
然后就到任务完成界面，然后就只能到开始界面
相当于这次任务的完成就把这个东西封存了，不能随意打开
任务完成到底能得到什么奖励：
  1. 能随机给出一个相应类别的之前写好的内容进行查看和保存
  2. 还有积分奖励，但是积分有什么用呢？可以用积分兑换奖品，奖品就是：
    1. 能用积分兑换内容查看机会
    2. 能用积分兑换内容保存机会
    3. 能用积分解锁任务限制机会（不然就是要出钱买任务了）
我还要尽量做到前后端分离，就比如这个init_task可以不放在这个前端的类里面，那放在哪里呢
我应该把所有的初始化都放在一块里面，里面包含了：
  1. 任务的初始化
  2. gps的初始化
  3. 神经网络的初始化
  4. 天气系统的初始化
self.title_frame.setStyleSheet("QWidget{background-color:red;}")
是不是先把底打成一个颜色
一个start按键：
  1. 切换为另一个界面
  2. 选出任务
    1. 输入用户数据，根据AI得到标签
      1. 获取ip的经纬度信息
      2. 获取当地的天气信息
    2. 根据标签生成临时数据库
      1. 任务的稀有度比例
    3. 从临时数据库挑选出任务
      1. 为数据库的数据赋予p
      2. 产生随机index
      3. 根据index来挑选任务
我还是使用excel来做吧，这个东西
接下来要做的事情：
  1. 完成其他几个界面的编写
  2. 完善数据库的调用和结构
50x30
差不多就是要生成界面了
我不打算在一开始就生成好了，我打算，如果任务需要的话再进行生成，这样才是最好的
如何设计这个任务界面：
  1. 肯定不能退出去，我觉得还是要不设计成可以退回主界面这个功能了
  2. 我要不然就只做一个按钮，就是上传按钮，还不用做那个提供编辑的功能的
  3. 那这样岂不是很简单，这个软件
  4. 反正我也是觉得还不用先做编辑功能的，那个是大头
  5. 那基本上这个软件就是如此地简单
还有很多名称是需要改的
今天要完成的：
  1. 调整四个界面

之后可以把读取两个文件的变量作为全局变量

任务：
  1. 5个任务的判定
  2. 数据库的写入
我是真的觉得数据库越来月重要了
判断任务是否上限应该通过done按钮来进行
一旦用户按了done，就可以判断任务是否满了
如果满了，就可以清空了
所以读取是不涉及的
但是任务创建是否涉及呢
一旦任务现在是四个，其实也是可以生成的
但是任务是5个的话，其实就是由done按钮来清空了
所以说创建是永远不会超标的
点击start按钮，如果数据库位空，其实还是会创建数据库，做不到
看来一开始只有一次上传的机会
还有一个bug是，任务读取的其实一开始是错误的
或者在数据库创建一个日期的标识，如果今天的任务完成了，就打个标记
当打开程序的时候，就先读取这个数据，是否完成
现在就是有一个问题：
  用户在上传完数据之后，其实他们是没有办法看到自己的数据的
我就在思考，到底是把所有的数据都可以展览，还是每次任务只能选择一个展示给用户看
如果想再看的话，就只能充值
但是我的本意，就是一天只能看一个
比如用户在完成了一个normal任务之后，只能随机看一个以前的normal任务，还是只能看以前的做过的同一个任务
我觉得还是text的normal的任务比较好
那我要不要给用户提供一个选择，可以自己进行保存呢
我想到一个更有趣的，就是把奖励也像任务一样划分等级
奖励：
  1. normal: 可以查看一次之前的内容，相同等级的
  2. good: 可以查看一次任意等级的之前的内容，但是是随机的
  3. great: 可以指定日期查看当天的内容，也是从当天随机抽一个
  4. excellent: 可以在great的基础上，把内容保存到本地
你觉得用户对于4，会怎么看，相当于上传到app上面，内容不是我的，但是可以进行本地保存，以后永久都随时查看，我觉得一定会很吸引人
每个页面的showbutton是不一样的

要做的事情：
  1. 用户内容保存的时候加上标题
  2. 保存的位置需要按照level、class进行分类
  3. 奖励读取同等级的任务，也就是奖励函数的第一个函数

如何写一个产品文档

98 82